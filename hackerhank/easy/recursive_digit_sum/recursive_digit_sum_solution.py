def super_digit(n, k):
    while len(n) > 1:
        n = str(sum([int(num) for num in n]) * k)
        k = 1
    return n


if __name__ == '__main__':
    tests = [
        ('9875', 4, '8'),
        ('93765', 5, '6'),
        ('7404954009694227446246375747227852213692570890717884174001'
         '5875371458387233903626244879261311611127105891274230989593'
         '2702054400339579248262519172160332830777499812438964106988'
         '4634086849138515079220750462317357487762780480576640689175'
         '3469561356684518354804900899624067732675696506639277788677'
         '6431521128062503338827151826496109011154748046706522984361'
         '3873499846390257375933040086863430523668050046930387013897'
         '0621063094068744250011278905749866100180938596934555184132'
         '6891436185900061490446190244282257755299768009838918308265'
         '4625098817411306985010658756762152160904278169491634807464'
         '3561308775263927254320864399340067289144110618612353009795'
         '3619010073436068405455744845464075019846687718587529001111'
         '4667186730452681943043971812380628117527172389889545776779'
         '5556648264885203252347926484486252253645350536055153867309'
         '2507007289600464541671368200460063657438904066282718269633'
         '7187610904694029221880801372864040345567230941110986028568'
         '3727109704601164919837003122430906795374971394997789239974'
         '33720159174153', 100000, '3')
    ]

    for n, k, expected in tests:
        assert super_digit(n, k) == expected
